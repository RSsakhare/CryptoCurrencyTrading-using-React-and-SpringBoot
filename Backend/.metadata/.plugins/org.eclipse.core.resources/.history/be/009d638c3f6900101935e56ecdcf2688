package com.trading.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.trading.exception.WatchlistNotFoundException;
import com.trading.modal.Coin;
import com.trading.modal.User;
import com.trading.modal.Watchlist;
import com.trading.service.CoinService;
import com.trading.service.UserService;
import com.trading.service.WatchlistService;

@RestController
@RequestMapping("/api/watchlist")
public class WatchlistController {

	@Autowired
	private WatchlistService watchlistService;
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private CoinService coinService;
	
	@GetMapping("/user")
	public ResponseEntity<Watchlist> getUserWatchlist(
			@RequestHeader("Authorization") String jwt) throws Exception {
		
		User user = userService.findUserProfileByJwt(jwt);
		Watchlist watchlist = watchlistService.findUserWatchlist(user.getId());
		return ResponseEntity.ok(watchlist);
		
	}
	
	@PostMapping("/create")
	public ResponseEntity<Watchlist> createWatchlist(
			@RequestHeader("Authorization") String jwt) throws Exception{
		
		User user = userService.findUserProfileByJwt(jwt);
		Watchlist createdWatchlist = watchlistService.createWatchlist(user);
		return ResponseEntity.status(HttpStatus.CREATED).body(createdWatchlist);
	}
	
	@GetMapping("/{watchlistId}")
	public ResponseEntity<Watchlist> getWatchlistById(
			@PathVariable Long watchlistId) throws Exception {
		
		Watchlist watchlist = watchlistService.findById(watchlistId);
		return ResponseEntity.ok(watchlist);
	}
	
	@PatchMapping("/add/coin/{coinName}")
    public ResponseEntity<?> addCoinToWatchlist(@PathVariable String coinName, @RequestParam Long userId) {
        try {
            Watchlist updated = watchlistService.addCoinToWatchlist(userId, coinName);
            return ResponseEntity.ok(updated);
        } catch (WatchlistNotFoundException e) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getMessage());
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Server error: " + e.getMessage());
        }
    }
}
